security:

    providers:
        in_database:
            entity:
                class: App\Entity\Client
                property: username

    encoders:
        App\Entity\Client:
            algorithm: bcrypt

    firewalls:

        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure



        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false



    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    access_control:
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/phones, roles: [ROLE_ADMIN], methods:[GET,POST,DELETE,PUT]}
        - { path: ^/api/phones, roles: [ROLE_USER], methods: [GET]}
        - { path: ^/api/clients, roles: [ROLE_ADMIN], methods:[GET,POST,DELETE,PUT]}
        - { path: ^/api/users, roles: [ROLE_USER], methods:[GET,POST,DELETE,PUT] }



